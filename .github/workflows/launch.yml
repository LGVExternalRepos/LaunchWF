name: Trigger Target Workflow

on:
  workflow_dispatch:
    inputs:
      action:
          type: choice
          description: Action
          options: 
          - Scan
          - Upload
          default: Scan
      loops:
        description: 'Number of uploads'
        default: "3"
      target_version:
        description: 'Input a version (e.g., v1.0.0)'
        required: true

env:
  BB64: "BB64"
  SHA256: "SHA256"
  FILE_SCAN: "xygeni-labdev-tuneado.yml"
  BB64_FILE_SCAN: "BB64_FILE_SCAN"
  SHA_FILE_SCAN: "SHA_FILE_SCAN"
  FILE_UPLOAD: "DownloadAndrun.yml"
  BB64_FILE_UPLOAD: "BB64_FILE_UPLOAD"
  SHA_FILE_UPLOAD: "SHA_FILE_UPLOAD"
  
jobs:
  trigger:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0  # Shallow clones should be disabled for better relevancy of analysis
      
      - name: Base64 and SHA
        run: |
          ls -l 
          pwd
          POPO=$(cat kk.txt | base64 -w 0)
          echo BB64=$(cat kk.txt | base64 -w 0) >> $GITHUB_ENV
          #echo SHA256=$(sha256sum kk.txt | head -c 64) >> $GITHUB_ENV
          #sha256sum kk.txt | head -c 64
          #echo SHA256=$(shasum < "kk3.txt" | awk '{print $1}') >> $GITHUB_ENV
          #curl https://api.github.com/repos/LGVExternalRepos/LaunchWF/.github/workflows/contents/kk3.txt
          echo SHA256=$(curl https://api.github.com/repos/LGVExternalRepos/LaunchWF/contents/kk3.txt | jq -r '.sha') >> $GITHUB_ENV
          echo $SHA256

          
          echo BB64_FILE_SCAN=$(cat ${{ env.FILE_SCAN }} | base64 -w 0) >> $GITHUB_ENV
          #echo SHA_FILE_SCAN=$(curl https://api.github.com/repos/LGVExternalRepos/LaunchWF/contents/.github/workflows/${{ env.FILE_SCAN }}kk | jq -r '.sha') >> $GITHUB_ENV
          echo SHA_FILE_SCAN=$(curl https://api.github.com/repos/LGVExternalRepos/LaunchWF/contents/.github/workflows/${{ env.FILE_SCAN }} | jq -r '.sha')  >> $GITHUB_ENV
          

      - name: Upload FILE_SCAN
        run: |

          echo BB64_FILE_SCAN=$(cat ${{ env.FILE_SCAN }} | base64 -w 0) >> $GITHUB_ENV
          #echo SHA_FILE_SCAN=$(curl https://api.github.com/repos/LGVExternalRepos/LaunchWF/contents/.github/workflows/${{ env.FILE_SCAN }} | jq -r '.sha')  >> $GITHUB_ENV
          curl https://api.github.com/repos/LGVExternalRepos/LaunchWF/contents/.github/workflows/${{ env.FILE_SCAN }} | jq -r '.sha'
          echo SHA_FILE_SCAN ${{ env.SHA_FILE_SCAN }}
          exit 1
          
          if [ "${{ env.SHA_FILE_SCAN }}" == "null" ]; then
              echo "NO EXISTE "
              curl -L \
                -X PUT \
                -H "Accept: application/vnd.github+json" \
                -H "Authorization: Bearer ${{ secrets.PAT_FOR_XYGENI_SCAN }}" \
                -H "X-GitHub-Api-Version: 2022-11-28" \
                https://api.github.com/repos/LGVExternalRepos/LaunchWF/contents/.github/workflows/${{ env.FILE_SCAN }}  \
                  -d '{"message":"my commit message","committer":{"name":"LGV","email":"luis.garcia@xygeni.io"},"content":"${{ env.BB64_FILE_SCAN }}"}'
          else
              echo "EXISTE ${{ env.SHA_FILE_SCAN }}"
              curl -L \
                -X PUT \
                -H "Accept: application/vnd.github+json" \
                -H "Authorization: Bearer ${{ secrets.PAT_FOR_XYGENI_SCAN }}" \
                -H "X-GitHub-Api-Version: 2022-11-28" \
                https://api.github.com/repos/LGVExternalRepos/LaunchWF/contents/.github/workflows/${{ env.FILE_SCAN }}  \
                  -d '{"message":"my commit message","committer":{"name":"LGV","email":"luis.garcia@xygeni.io"},"content":"${{ env.BB64_FILE_SCAN }}","sha":"${{ env.SHA_FILE_SCAN }}"}'
          fi
          exit 1

          
          RET=$(curl https://api.github.com/repos/LGVExternalRepos/LaunchWF/contents/.github/workflows/${{ env.FILE_SCAN }} | jq -r '.sha')
          RET=$(curl https://api.github.com/repos/LGVExternalRepos/LaunchWF/contents/.github/workflows/${{ env.FILE_SCAN }}kk | jq -r '.sha')
          echo $RET
          if [ "$RET" == "null" ]; then
              echo "NO EXISTE "
          else
              echo "EXISTE "
          fi
          exit 1
          
          
          curl -L \
            -X PUT \
            -H "Accept: application/vnd.github+json" \
            -H "Authorization: Bearer ${{ secrets.PAT_FOR_XYGENI_SCAN }}" \
            -H "X-GitHub-Api-Version: 2022-11-28" \
            https://api.github.com/repos/LGVExternalRepos/LaunchWF/contents/.github/workflows/${{ env.FILE_SCAN }}  \
              -d '{"message":"my commit message","committer":{"name":"LGV","email":"luis.garcia@xygeni.io"},"content":"${{ env.BB64_FILE_SCAN }}"}' \
              | jq -r '.status'
          RET=$?
          if [ "$RET" == "0" ]; then
              echo "OK "
          else
              echo "KO "
          fi
          
          exit 1
        
      - name: Upload File
        run: |
          declare -a Repos=(\
          "Mindustry" \
          "graylog2-server" \
          "dependency-track")

          #ls -l 
          #pwd
          #POPO=$(cat kk.txt | base64 -w 0)
          #echo XY_USERNAME=${{ secrets.XY_USERNAME_PRO }} >> $GITHUB_ENV
          #echo $POPO

          curl -L \
            -X PUT \
            -H "Accept: application/vnd.github+json" \
            -H "Authorization: Bearer ${{ secrets.PAT_FOR_XYGENI_SCAN }}" \
            -H "X-GitHub-Api-Version: 2022-11-28" \
            https://api.github.com/repos/LGVExternalRepos/LaunchWF/contents/kk3.txt \
              -d '{"message":"my commit message","committer":{"name":"LGV","email":"luis.graci@xygeni.io"},"content":"${{ env.BB64 }}","sha":"${{ env.SHA256 }}"}'
          exit 1
        
      - name: Trigger Workflow in Another Repository
        run: |

          declare -a Repos=(\
          "Mindustry" \
          "graylog2-server" \
          "dependency-track")

          repo_owner="LGVExternalRepos" 
          event_type="trigger-workflow" 
          loops="${{ github.event.inputs.loops }}"
          version="${{ github.event.inputs.target_version }}"
          action="${{ github.event.inputs.action }}"
          event_type="${{ github.event.inputs.action }}"
          
          for i in "${Repos[@]}"
          do
           echo "$i"
           repo_name="$i"  
           curl -L \
            -X POST \
            -H "Accept: application/vnd.github+json" \
            -H "Authorization: Bearer ${{ secrets.GH_PAT }}" \
            -H "X-GitHub-Api-Version: 2022-11-28" \
            https://api.github.com/repos/$repo_owner/$repo_name/dispatches \
            -d "{\"event_type\": \"$event_type\", \"client_payload\": {\"loops\": \"$loops\", \"version\": \"$version\", \"unit\": false, \"integration\": true}}"
          done

