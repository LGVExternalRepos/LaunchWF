name: Trigger Target Workflow

on:
  workflow_dispatch:
    inputs:
      action:
          type: choice
          description: Action
          options: 
          - Scan
          - Upload
          default: Scan
      loops:
        description: 'Number of uploads'
        default: "3"
      target_version:
        description: 'Input a version (e.g., v1.0.0)'
        required: true

env:
  BB64: "BB64"
  SHA256: "SHA256"
  FILE_SCAN: "xygeni-labdev-tuneado.yml"
  BB64_FILE_SCAN: "BB64_FILE_SCAN"
  SHA_FILE_SCAN: "SHA_FILE_SCAN"
  FILE_UPLOAD: "DownloadAndRun.yml"
  BB64_FILE_UPLOAD: "BB64_FILE_UPLOAD"
  SHA_FILE_UPLOAD: "SHA_FILE_UPLOAD"
  REPO_LIST: ("Mindustry" "graylog2-server" "dependency-track")
  TEST_S: "_kk"
  
jobs:
  trigger:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0  # Shallow clones should be disabled for better relevancy of analysis
      
      - name: Create fork
        run: | 
        
            readarray repolist < repos.txt
            for line in "${repolist[@]}"
            do
                echo Creating fork for $line
                REPO_URL=$line
                # extract the protocol
                proto="$(echo $REPO_URL | grep :// | sed -e's,^\(.*://\).*,\1,g')"
                echo proto : $proto
                # remove the protocol
                url="$(echo ${REPO_URL/$proto/})"
                echo url : $url
                # extract the user (if any)
                user="$(echo $url | grep @ | cut -d@ -f1)"
                echo user : $user
                # extract the host and port
                hostport="$(echo ${url/$user@/} | cut -d/ -f1)"
                echo hostport : $hostport
                # by request host without port
                host="$(echo $hostport | sed -e 's,:.*,,g')"
                echo host : $host
                # by request - try to extract the port
                port="$(echo $hostport | sed -e 's,^.*:,:,g' -e 's,.*:\([0-9]*\).*,\1,g' -e 's,[^0-9],,g')"
                echo port : $port
                # extract the path (if any)
                path="$(echo $url | grep / | cut -d/ -f2-)"
                echo path : $path
                org="$(echo $path | grep / | cut -d/ -f1)"
                echo org : $org
                repo="$(echo $path | grep / | cut -d/ -f2-)"
                echo repo : $repo

                curl -Lb \
                  -X POST \
                  -H "Accept: application/vnd.github+json" \
                  -H "Authorization: Bearer ${{ secrets.PAT_FOR_XYGENI_SCAN }}" \
                  -H "X-GitHub-Api-Version: 2022-11-28" \
                    https://api.github.com/repos/$org/$repo/forks \
                      -d '{"organization":"LGVExternalRepos","name":"insecure-kubernetes-deployments","default_branch_only":true}'
            done
            
      - name: Uploading Scan file
        run: | 
            
            readarray repolist < repos.txt
            for line in "${repolist[@]}"
            do
                echo Uploading Scan file for $line
                REPO_URL=$line
                # extract the protocol
                proto="$(echo $REPO_URL | grep :// | sed -e's,^\(.*://\).*,\1,g')"
                echo proto : $proto
                # remove the protocol
                url="$(echo ${REPO_URL/$proto/})"
                echo url : $url
                # extract the user (if any)
                user="$(echo $url | grep @ | cut -d@ -f1)"
                echo user : $user
                # extract the host and port
                hostport="$(echo ${url/$user@/} | cut -d/ -f1)"
                echo hostport : $hostport
                # by request host without port
                host="$(echo $hostport | sed -e 's,:.*,,g')"
                echo host : $host
                # by request - try to extract the port
                port="$(echo $hostport | sed -e 's,^.*:,:,g' -e 's,.*:\([0-9]*\).*,\1,g' -e 's,[^0-9],,g')"
                echo port : $port
                # extract the path (if any)
                path="$(echo $url | grep / | cut -d/ -f2-)"
                echo path : $path
                org="$(echo $path | grep / | cut -d/ -f1)"
                echo org : $org
                repo="$(echo $path | grep / | cut -d/ -f2-)"
                echo repo : $repo

                BB64_FILE_SCAN="$(cat ${{ env.FILE_SCAN }} | base64 -w 0)"
                echo BB64_FILE_SCAN $BB64_FILE_SCAN
                #curl https://api.github.com/repos/LGVExternalRepos/$repo/contents/.github/workflows/${{ env.FILE_SCAN }}${{ env.TEST_S }}
                SHA_FILE_SCAN=$(curl https://api.github.com/repos/LGVExternalRepos/$repo/contents/.github/workflows/${{ env.FILE_SCAN }}${{ env.TEST_S }} | jq -r '.sha')
                #echo BB64_FILE_UPLOAD=$(cat ${{ env.FILE_UPLOAD }} | base64 -w 0)
                #echo SHA_FILE_UPLOAD=$(curl https://api.github.com/repos/LGVExternalRepos/LaunchWF/contents/.github/workflows/${{ env.FILE_UPLOAD }} | jq -r '.sha')
          
                if [ "$SHA_FILE_SCAN" == "null" ]; then
                    echo "NO EXISTE "
                    menosd="'{\"message\":\"my commit message\",\"committer\":{\"name\":\"LGV\",\"email\":\"luis.garcia@xygeni.io\"},\"content\":\"$BB64_FILE_SCAN\"}'"
                    echo $menosd > temp.json
                    cat temp.json

                    echo curl -L \
                      -X PUT \
                      -H "Accept: application/vnd.github+json" \
                      -H "Authorization: Bearer ${{ secrets.PAT_FOR_XYGENI_SCAN }}" \
                      -H "X-GitHub-Api-Version: 2022-11-28" \
                      https://api.github.com/repos/LGVExternalRepos/$repo/contents/.github/workflows/${{ env.FILE_SCAN }}${{ env.TEST_S }}  \
                        -d "$menosd"
                    curl -L \
                      -X PUT \
                      -H "Accept: application/vnd.github+json" \
                      -H "Authorization: Bearer ${{ secrets.PAT_FOR_XYGENI_SCAN }}" \
                      -H "X-GitHub-Api-Version: 2022-11-28" \
                      https://api.github.com/repos/LGVExternalRepos/$repo/contents/.github/workflows/${{ env.FILE_SCAN }}${{ env.TEST_S }}  \
                        -d @temp.json
                      
                      #  -d '{"message":"my commit message","committer":{"name":"LGV","email":"luis.garcia@xygeni.io"},"content":"$BB64_FILE_SCAN"}'

                else
                    echo "EXISTE $SHA_FILE_SCAN"
                    curl -L \
                      -X PUT \
                      -H "Accept: application/vnd.github+json" \
                      -H "Authorization: Bearer ${{ secrets.PAT_FOR_XYGENI_SCAN }}" \
                      -H "X-GitHub-Api-Version: 2022-11-28" \
                      https://api.github.com/repos/LGVExternalRepos/$repo/contents/.github/workflows/${{ env.FILE_SCAN }}${{ env.TEST_S }}  \
                        -d '{"message":"my commit message","committer":{"name":"LGV","email":"luis.garcia@xygeni.io"},"content":"$BB64_FILE_SCAN","sha":"$SHA_FILE_SCAN"}'
                fi
              
            done

            exit 1


      - name: Base64 and SHA
        run: |  
          echo BB64_FILE_SCAN=$(cat ${{ env.FILE_SCAN }} | base64 -w 0) >> $GITHUB_ENV
          echo SHA_FILE_SCAN=$(curl https://api.github.com/repos/LGVExternalRepos/LaunchWF/contents/.github/workflows/${{ env.FILE_SCAN }} | jq -r '.sha')  >> $GITHUB_ENV
          echo BB64_FILE_UPLOAD=$(cat ${{ env.FILE_UPLOAD }} | base64 -w 0) >> $GITHUB_ENV
          echo SHA_FILE_UPLOAD=$(curl https://api.github.com/repos/LGVExternalRepos/LaunchWF/contents/.github/workflows/${{ env.FILE_UPLOAD }} | jq -r '.sha')  >> $GITHUB_ENV
          
      - name: Upload FILE_SCAN
        run: |

          declare -a REPOS=${{ env.REPO_LIST }}
          for repo in "${REPOS[@]}"
          do
            echo Upload FILE_SCAN for repo $repo
            if [ "${{ env.SHA_FILE_SCAN }}" == "null" ]; then
                echo "NO EXISTE "
                curl -L \
                  -X PUT \
                  -H "Accept: application/vnd.github+json" \
                  -H "Authorization: Bearer ${{ secrets.PAT_FOR_XYGENI_SCAN }}" \
                  -H "X-GitHub-Api-Version: 2022-11-28" \
                  https://api.github.com/repos/LGVExternalRepos/$repo/contents/.github/workflows/${{ env.FILE_SCAN }}${{ env.TEST_S }}  \
                    -d '{"message":"my commit message","committer":{"name":"LGV","email":"luis.garcia@xygeni.io"},"content":"${{ env.BB64_FILE_SCAN }}"}'
            else
                echo "EXISTE ${{ env.SHA_FILE_SCAN }}"
                curl -L \
                  -X PUT \
                  -H "Accept: application/vnd.github+json" \
                  -H "Authorization: Bearer ${{ secrets.PAT_FOR_XYGENI_SCAN }}" \
                  -H "X-GitHub-Api-Version: 2022-11-28" \
                  https://api.github.com/repos/LGVExternalRepos/$repo/contents/.github/workflows/${{ env.FILE_SCAN }}${{ env.TEST_S }}  \
                    -d '{"message":"my commit message","committer":{"name":"LGV","email":"luis.garcia@xygeni.io"},"content":"${{ env.BB64_FILE_SCAN }}","sha":"${{ env.SHA_FILE_SCAN }}"}'
            fi
          done


      - name: Upload FILE_UPLOAD
        run: |
        
          declare -a REPOS=${{ env.REPO_LIST }}
          for repo in "${REPOS[@]}"
          do
            echo Upload FILE_SCAN for repo $repo
            if [ "${{ env.SHA_FILE_UPLOAD }}" == "null" ]; then
                echo "NO EXISTE "
                curl -L \
                  -X PUT \
                  -H "Accept: application/vnd.github+json" \
                  -H "Authorization: Bearer ${{ secrets.PAT_FOR_XYGENI_SCAN }}" \
                  -H "X-GitHub-Api-Version: 2022-11-28" \
                  https://api.github.com/repos/LGVExternalRepos/$repo/contents/.github/workflows/${{ env.FILE_UPLOAD }}${{ env.TEST_S }}  \
                    -d '{"message":"my commit message","committer":{"name":"LGV","email":"luis.garcia@xygeni.io"},"content":"${{ env.BB64_FILE_UPLOAD }}"}'
            else
                echo "EXISTE ${{ env.SHA_FILE_UPLOAD }}"
                curl -L \
                  -X PUT \
                  -H "Accept: application/vnd.github+json" \
                  -H "Authorization: Bearer ${{ secrets.PAT_FOR_XYGENI_SCAN }}" \
                  -H "X-GitHub-Api-Version: 2022-11-28" \
                  https://api.github.com/repos/LGVExternalRepos/$repo/contents/.github/workflows/${{ env.FILE_UPLOAD }}${{ env.TEST_S }}  \
                    -d '{"message":"my commit message","committer":{"name":"LGV","email":"luis.garcia@xygeni.io"},"content":"${{ env.BB64_FILE_UPLOAD }}","sha":"${{ env.SHA_FILE_UPLOAD }}"}'
            fi
          done
          
        
        
      - name: Trigger Workflow in Another Repository
        run: |
         
          declare -a KK=${{ env.REPO_LIST }}
          for i in "${KK[@]}"
          do
           echo "$i"
          done
          exit 1
          
          declare -a Repos=(\
          "Mindustry" \
          "graylog2-server" \
          "dependency-track")

          repo_owner="LGVExternalRepos" 
          event_type="trigger-workflow" 
          loops="${{ github.event.inputs.loops }}"
          version="${{ github.event.inputs.target_version }}"
          action="${{ github.event.inputs.action }}"
          event_type="${{ github.event.inputs.action }}"
          
          for i in "${Repos[@]}"
          do
           echo "$i"
           repo_name="$i"  
           curl -L \
            -X POST \
            -H "Accept: application/vnd.github+json" \
            -H "Authorization: Bearer ${{ secrets.GH_PAT }}" \
            -H "X-GitHub-Api-Version: 2022-11-28" \
            https://api.github.com/repos/$repo_owner/$repo_name/dispatches \
            -d "{\"event_type\": \"$event_type\", \"client_payload\": {\"loops\": \"$loops\", \"version\": \"$version\", \"unit\": false, \"integration\": true}}"
          done

