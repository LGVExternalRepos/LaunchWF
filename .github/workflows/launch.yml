name: Trigger Target Workflow

on:
  workflow_dispatch:
    inputs:
      action:
          type: choice
          description: Action
          options: 
          - Scan
          - Upload
          default: Scan
      loops:
        description: 'Number of uploads'
        default: "3"
      target_version:
        description: 'Input a version (e.g., v1.0.0)'
        required: true

env:
  BB64: "BB64"
  SHA256: "SHA256"
  FILE_SCAN: "xygeni-labdev-tuneado.yml"
  BB64_FILE_SCAN: "BB64_FILE_SCAN"
  SHA_FILE_SCAN: "SHA_FILE_SCAN"
  FILE_UPLOAD: "DownloadAndRun.yml"
  BB64_FILE_UPLOAD: "BB64_FILE_UPLOAD"
  SHA_FILE_UPLOAD: "SHA_FILE_UPLOAD"
  REPO_LIST: ("develop" "main")
  
jobs:
  trigger:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0  # Shallow clones should be disabled for better relevancy of analysis
      
      - name: Base64 and SHA
        run: |  
          echo BB64_FILE_SCAN=$(cat ${{ env.FILE_SCAN }} | base64 -w 0) >> $GITHUB_ENV
          echo SHA_FILE_SCAN=$(curl https://api.github.com/repos/LGVExternalRepos/LaunchWF/contents/.github/workflows/${{ env.FILE_SCAN }} | jq -r '.sha')  >> $GITHUB_ENV
          echo BB64_FILE_UPLOAD=$(cat ${{ env.FILE_UPLOAD }} | base64 -w 0) >> $GITHUB_ENV
          echo SHA_FILE_UPLOAD=$(curl https://api.github.com/repos/LGVExternalRepos/LaunchWF/contents/.github/workflows/${{ env.FILE_UPLOAD }} | jq -r '.sha')  >> $GITHUB_ENV
          
      - name: Upload FILE_SCAN
        run: |
   
          if [ "${{ env.SHA_FILE_SCAN }}" == "null" ]; then
              echo "NO EXISTE "
              curl -L \
                -X PUT \
                -H "Accept: application/vnd.github+json" \
                -H "Authorization: Bearer ${{ secrets.PAT_FOR_XYGENI_SCAN }}" \
                -H "X-GitHub-Api-Version: 2022-11-28" \
                https://api.github.com/repos/LGVExternalRepos/LaunchWF/contents/.github/workflows/${{ env.FILE_SCAN }}  \
                  -d '{"message":"my commit message","committer":{"name":"LGV","email":"luis.garcia@xygeni.io"},"content":"${{ env.BB64_FILE_SCAN }}"}'
          else
              echo "EXISTE ${{ env.SHA_FILE_SCAN }}"
              curl -L \
                -X PUT \
                -H "Accept: application/vnd.github+json" \
                -H "Authorization: Bearer ${{ secrets.PAT_FOR_XYGENI_SCAN }}" \
                -H "X-GitHub-Api-Version: 2022-11-28" \
                https://api.github.com/repos/LGVExternalRepos/LaunchWF/contents/.github/workflows/${{ env.FILE_SCAN }}  \
                  -d '{"message":"my commit message","committer":{"name":"LGV","email":"luis.garcia@xygeni.io"},"content":"${{ env.BB64_FILE_SCAN }}","sha":"${{ env.SHA_FILE_SCAN }}"}'
          fi

      - name: Upload FILE_UPLOAD
        run: |
   
          if [ "${{ env.SHA_FILE_UPLOAD }}" == "null" ]; then
              echo "NO EXISTE "
              curl -L \
                -X PUT \
                -H "Accept: application/vnd.github+json" \
                -H "Authorization: Bearer ${{ secrets.PAT_FOR_XYGENI_SCAN }}" \
                -H "X-GitHub-Api-Version: 2022-11-28" \
                https://api.github.com/repos/LGVExternalRepos/LaunchWF/contents/.github/workflows/${{ env.FILE_UPLOAD }}  \
                  -d '{"message":"my commit message","committer":{"name":"LGV","email":"luis.garcia@xygeni.io"},"content":"${{ env.BB64_FILE_UPLOAD }}"}'
          else
              echo "EXISTE ${{ env.SHA_FILE_UPLOAD }}"
              curl -L \
                -X PUT \
                -H "Accept: application/vnd.github+json" \
                -H "Authorization: Bearer ${{ secrets.PAT_FOR_XYGENI_SCAN }}" \
                -H "X-GitHub-Api-Version: 2022-11-28" \
                https://api.github.com/repos/LGVExternalRepos/LaunchWF/contents/.github/workflows/${{ env.FILE_UPLOAD }}  \
                  -d '{"message":"my commit message","committer":{"name":"LGV","email":"luis.garcia@xygeni.io"},"content":"${{ env.BB64_FILE_UPLOAD }}","sha":"${{ env.SHA_FILE_UPLOAD }}"}'
          fi
          
        
        
      - name: Trigger Workflow in Another Repository
        run: |
         
          declare -a KK=${{ env.REPO_LIST }}
          for i in "${KK[@]}"
          do
           echo "$i"
          done
          exit 1
          
          declare -a Repos=(\
          "Mindustry" \
          "graylog2-server" \
          "dependency-track")

          repo_owner="LGVExternalRepos" 
          event_type="trigger-workflow" 
          loops="${{ github.event.inputs.loops }}"
          version="${{ github.event.inputs.target_version }}"
          action="${{ github.event.inputs.action }}"
          event_type="${{ github.event.inputs.action }}"
          
          for i in "${Repos[@]}"
          do
           echo "$i"
           repo_name="$i"  
           curl -L \
            -X POST \
            -H "Accept: application/vnd.github+json" \
            -H "Authorization: Bearer ${{ secrets.GH_PAT }}" \
            -H "X-GitHub-Api-Version: 2022-11-28" \
            https://api.github.com/repos/$repo_owner/$repo_name/dispatches \
            -d "{\"event_type\": \"$event_type\", \"client_payload\": {\"loops\": \"$loops\", \"version\": \"$version\", \"unit\": false, \"integration\": true}}"
          done

